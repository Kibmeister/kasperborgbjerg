{"remainingRequest":"/Users/kaspersmac/Desktop/kasper-borgbjerg/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kaspersmac/Desktop/kasper-borgbjerg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kaspersmac/Desktop/kasper-borgbjerg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaspersmac/Desktop/kasper-borgbjerg/src/components/CoffeeCan_W.vue?vue&type=template&id=65ab473c&scoped=true&","dependencies":[{"path":"/Users/kaspersmac/Desktop/kasper-borgbjerg/src/components/CoffeeCan_W.vue","mtime":1610392648581},{"path":"/Users/kaspersmac/Desktop/kasper-borgbjerg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaspersmac/Desktop/kasper-borgbjerg/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kaspersmac/Desktop/kasper-borgbjerg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaspersmac/Desktop/kasper-borgbjerg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}