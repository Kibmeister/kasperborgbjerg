{"remainingRequest":"/Users/kaspersmac/Desktop/kasperborgbjerg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaspersmac/Desktop/kasperborgbjerg/src/components/Topico_W.vue?vue&type=template&id=b2bbfdb0&scoped=true&","dependencies":[{"path":"/Users/kaspersmac/Desktop/kasperborgbjerg/src/components/Topico_W.vue","mtime":1613658762532},{"path":"/Users/kaspersmac/Desktop/kasperborgbjerg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaspersmac/Desktop/kasperborgbjerg/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kaspersmac/Desktop/kasperborgbjerg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaspersmac/Desktop/kasperborgbjerg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYKICByZWY9ImRyYWdnYWJsZUNvbnRhaW5lciIKICBpZD0icmVzaXphYmxlIgogIGNsYXNzPSJkcmFnZ2FibGVDb250YWluZXIiCiAgdi1iaW5kOnN0eWxlPSJ7CiAgICB6SW5kZXg6IHpJbmRleCwKICAgICdiYWNrZ3JvdW5kLWNvbG9yJzogY29udGVudENvbG9yLAogIH0iCiAgQG1vdXNlZG93bj0iekluZGV4VG9nZ2xlIgo+CiAgPGRpdiBjbGFzcz0iZHJhZ2dhYmxlSGVhZGVyIiBAbW91c2Vkb3duPSJkcmFnTW91c2VEb3duIj4KICAgIDxkaXYgY2xhc3M9ImRyYWdnYWJsZS1oZWFkZXItdGV4dCI+e3sgY29udGVudC5oZWFkZXIgfX08L2Rpdj4KICAgIDxkaXYgY2xhc3M9InRpdGxlLWJhci1jb250cm9scyIgQG1vdXNlZG93bi5zdG9wPgogICAgICA8QnV0dG9uIGFyaWEtbGFiZWw9Ik1pbmltaXplIiBAY2xpY2s9IndpbmRvd1N0YXRlKCdtaW5pbWl6ZScpIj48L0J1dHRvbj4KICAgICAgPEJ1dHRvbiBhcmlhLWxhYmVsPSJNYXhpbWl6ZSIgQGNsaWNrPSJ3aW5kb3dTdGF0ZSgnbWF4aW1pemUnKSI+PC9CdXR0b24+CiAgICAgIDxCdXR0b24gYXJpYS1sYWJlbD0iQ2xvc2UiIEBjbGljay5zdG9wPSJoaWRlQ29udGFpbmVyIj48L0J1dHRvbj4KICAgIDwvZGl2PgogIDwvZGl2PgoKICA8ZGl2IGNsYXNzPSJoZWFkZXIiPgogICAgPGgzPnt7IGNvbnRlbnQudGl0bGUgfX08L2gzPgogIDwvZGl2PgoKICA8ZGl2IGNsYXNzPSJjb250ZW50Ij4KICAgIDxkaXYgY2xhc3M9Im1lZGlhQm94Ij4KICAgICAgPGg1PldoYXQgaXMgdG9waWNvPC9oNT4KICAgICAgPHA+CiAgICAgICAgVG9waWNvIGlzIGFuIG9ubGluZSBkaWN0aW9uYXJ5IGZvciB0aGUgaW5kaXZpZHVhbCBjbGFzc2VzIHRvIHVzZS4gSXQKICAgICAgICBpcyBhaW1lZCBmb3IgdGhlIHB1cGlscyBpbiBhIHNpeHRoIGdyYWRlIEVuZ2xpc2ggY2xhc3MsIGRlc2lnbmVkIG9uCiAgICAgICAgdGhlIGJhc2lzIG9mIG9ic2VydmF0aW9ucyBhbmQgZW1waXJpY2FsZGF0YSB0aGF0IHdlIGhhdmUgZ2F0aGVyZWQgYW5kCiAgICAgICAgYW5hbHl6ZWQuIEl0IGlzIHVzZWQgdG8gc3RvcmUgdmVyYmFsIGRlc2NyaXB0aW9ucyBvZiByZWxldmFudCB3b3JkcwogICAgICAgIGFuZCB0b3BpY3MgbGVhcm5lZCBpbiBjbGFzcyBpbiBhdWRpbyBmaWxlcy4gVGhpcyBwcm9qZWN0IGZpdHMgaW4gdGhlCiAgICAgICAgY2F0ZWdvcnkgb2YgRWR1VGVjaCwgd2hpY2ggY292ZXJzIHRoZSBzdHVkeSBhbmQgZXRoaWNhbCBwcmFjdGljZSBvZgogICAgICAgIGZhY2lsaXRhdGluZyBsZWFybmluZyBhbmQgaW1wcm92aW5nIHBlcmZvcm1hbmNlIGJ5IGNyZWF0aW5nLCB1c2luZyBhbmQKICAgICAgICBtYW5hZ2luZyBhcHByb3ByaWF0ZSB0ZWNobm9sb2dpY2FsIHByb2Nlc3NlcyBhbmQgcmVzb3VyY2VzCiAgICAgIDwvcD4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0ibWVkaWFCb3giPgogICAgICA8aDU+QnJpZWYgZGVtbzwvaDU+CiAgICAgIDx2aW1lby1wbGF5ZXIKICAgICAgICA6dmlkZW8taWQ9InRoaXMuY29udGVudC52aWRlb0lEIgogICAgICAgIDpwbGF5ZXItaGVpZ2h0PSIzMDAiCiAgICAgICAgOnBsYXllci13aWR0aD0iMjAwIgogICAgICA+PC92aW1lby1wbGF5ZXI+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9Im1lZGlhQm94Ij4KICAgICAgPGg1PkhvdyBpdCB3b3JrczwvaDU+CiAgICAgIDxwPgogICAgICAgIFRoZSBnYW1lIHdvcmtzIGFzIGZvbGxvd2luZy4gRm91ciBwdXBpbHMgc2l0cyBhcm91bmQgdGhlIGRldmljZS4gVGhlbgogICAgICAgIHRoZXkgcHVzaCB0aGUgbWFpbiBidXR0b24gb24gdGhlIHRvcCBvZiB0aGUgZGV2aWNlLCB3aGljaCBtYWtlcyBmb3VyCiAgICAgICAgZGlmZmVyZW50IHdvcmRzIGFwcGVhciwgd2hlcmUgdGhleSBvbmx5IGNhbiBzZWUgb25lIHdvcmQgZWFjaC4gVGhlc2UKICAgICAgICBhcmUgdGhlIG1haW4gd29yZHMuIFRoZXkgYWxsIGhhdmUgdGhyZWUgY29ycmVzcG9uZGluZyBoZWxwIHdvcmRzLAogICAgICAgIHdoaWNoIGlzIHJlbGF0ZWQgdG8gdGhlIG1lYW5pbmcgb2YgdGhlIG1haW4gd29yZC4gVGhlbiB0aGV5IHB1c2ggdGhlCiAgICAgICAgYnV0dG9uIGFnYWluLCBhbmQgdGhlIGRldmljZSB3aWxsIGNob29zZSBvbmUgb2YgdGhvc2UgZm91ciB3b3Jkcy4gVGhlCiAgICAgICAgcHVwaWwgdGhhdCB0aGUgd29yZCBpcyBkaXNwbGF5ZWQgZm9yLCB3aWxsIGJlIGluc3RydWN0ZWQgdG8gZXhwbGFpbgogICAgICAgIHRoYXQuIFdoZW4gdGhleSBwcmVzcyB0aGUgYnV0dG9uIGFnYWluLCB0aGVyZSB3aWxsIGFwcGVhciBhIGhlbHAgd29yZCwKICAgICAgICBjb25uZWN0ZWQgdG8gdGhlIGNob3NlbiB3b3JkLCBvbiB0aGUgdGhyZWUgb3RoZXIgc2NyZWVucy4KICAgICAgPC9wPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJtZWRpYUJveCI+CiAgICAgIDxoNT48L2g1PgogICAgICA8cD4KICAgICAgICBIZWxwIHdvcmRzIHdpbGwgYXBwZWFyIG9uZSBhdCBhIHRpbWUsIHRvIHNlY3VyZSB0aGF0IHRoZXkgY2FuIGRpc2N1c3MKICAgICAgICBhbmQgY29ubmVjdCBpdCB0byB0aGUgY2hvc2VuIHdvcmQuIEFmdGVyIHRoaXMgaXMgZG9uZSwgdGhleSBjYW4gcHJlc3MKICAgICAgICB0aGUgYnV0dG9uIGFnYWluLCB0byByZWNvcmQgdGhlIGV4cGxhbmF0aW9uIG9mIHRoZSB3b3JkLiBXaGVuIHRoaXMgaXMKICAgICAgICBkb25lLCB0aGUgZXhwbGFuYXRpb24gaXMgc3RvcmVkIG9uIHRoZSB3ZWJzaXRlLCB3aGVyZSB0aGV5IGNhbiBmaW5kIGl0CiAgICAgICAgY29ubmVjdGVkIHRvIHRoZSBjaG9zZW4gd29yZC4gRnJvbSB0aGUgdGVhY2hlcuKAmXMgcGVyc3BlY3RpdmUsIHdlCiAgICAgICAgbGVhcm5lZCB0aGF0IHNoZSBoYXMgaGFkIHNvbWUgcXVpdGUgc3RydWdnbGluZyBleHBlcmllbmNlcyB3aXRoIG5ldwogICAgICAgIHRlY2hub2xvZ3ksIHNvIHdlIGhhdmUgbWFkZSBvdXIgd2Vic2l0ZSBpdCBpbiBhIHdheSwgd2hlcmUgc2hlIG9ubHkKICAgICAgICByZWRlZmluZXMgdGhlIG1haW4gd29yZHMgYW5kIGhlbHAgd29yZHMuCiAgICAgIDwvcD4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0ibWVkaWFCb3giPgogICAgICA8R3JvdXBTVkcgY2xhc3M9InN2ZyI+PC9Hcm91cFNWRz4KICAgICAgPGg1PkZvdXIgcHVwaWxzIGludGVyYWN0aW9uPC9oNT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0ibWVkaWFCb3giPgogICAgICA8SWxsdVNWRyBjbGFzcz0ic3ZnIj48L0lsbHVTVkc+CiAgICAgIDxoNT5EZXZpY2UgLyBDbG91ZCBtb2RlbDwvaDU+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9Im1lZGlhQm94Ij4KICAgICAgPFNjZW5hcmlvU1ZHIGNsYXNzPSJzdmciPjwvU2NlbmFyaW9TVkc+CiAgICAgIDxoNT5TY2VuYXJpbyBpbnRlcmFjaW9uPC9oNT4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9Im1lZGlhQm94Ij4KICAgICAgPGg1PkVtcGlyaWNhbCBkYXRhPC9oNT4KICAgICAgPHA+CiAgICAgICAgRnJvbSB0aGUgb2JzZXJ2YXRpb25zIHdlIG1hZGUgdmlzaXRpbmcgYW4gRWxlbWVudGFyeSBzY2hvb2wsIHNpeHRoCiAgICAgICAgZ3JhZGUgZW5nbGlzaCBjbGFzcywgd2UgZ290IGRpZmZlcmVudCB2aWV3cyBvbiB0aGUgcHVwaWxzIGFuZCB0aGVpcgogICAgICAgIHdvcmsgbWV0aG9kcy4gV2Ugd3JvdGUgbm90ZXMgYWJvdXQgaG93IHRoZXkgYWN0ZWQgYW5kIHVzZWQgdGhlIEVuZ2xpc2gKICAgICAgICBsYW5ndWFnZSBjb21wYXJlZCB0byB0aGUgRGFuaXNoLiBXZSBhbHNvIHNhdywgaG93IHRoZXkgY29vcGVyYXRlZCB3aXRoCiAgICAgICAgZWFjaCBvdGhlciBhbmQgaG93IHRoZXkgaGVscGVkIGVhY2ggb3RoZXIuIEZ1cnRoZXJtb3JlLCB3ZSBzYXcgaG93IHRoZQogICAgICAgIHRoZSBwdXBpbOKAmXMgcmVsYXRpb24gd2l0aCB0aGUgdGVhY2hlciB3YXMgbGlrZS4gSW5mb3JtYXRpb24gd2FzIGdhaW5lZAogICAgICAgIHdpdGggdGhlIG1ldGhvZHMgZnJvbSBFdGhub2dyYXBoaWMgZmllbGQgbWV0aG9kcywgR3VpZGluZyBQcmluY2lwbGVzCiAgICAgICAgb2YgRXRobm9ncmFwaHkoTmF0dXJhbFNldHRpbmdzKS4gV2UgYWxzbyBoYWQgc21hbGwgY29udmVyc2F0aW9ucyBhbmQKICAgICAgICBzZW1pLXN0cnVjdHVyZWQgaW50ZXJ2aWV3cyB3aXRoIHRoZSB0ZWFjaGVyIGFuZCBwdXBpbHMgd2hpY2ggZ2F2ZSBhbgogICAgICAgIGluc2lnaHQgaW4gdGhlaXIgZGFpbHkgd29yayBhbmQgYWN0aXZpdGllcy4KICAgICAgPC9wPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJtZWRpYUJveCI+CiAgICAgIDxoNT5Db25jZXB0PC9oNT4KICAgICAgPHA+CiAgICAgICAgSXQgaXMgdGhlIHB1cGlscyB0aGVtc2VsdmVzLCB3aG8gcmVjb3JkcyB0aGVzZSBhdWRpbyBmaWxlcy4gVGhlIGdhbWUKICAgICAgICBpcyBzdXBwb3NlIHRvIGVuY291cmFnZSB0aGUgcHVwaWxzLCB0byBjb2xsYWJvcmF0ZSB3aXRoIHRoZWlyCiAgICAgICAgY2xhc3NtYXRlcywgdG8gbWFrZSB0aGUgbW9zdCBzdWJzdGFudGlhbCBkZXNjcmlwdGlvbiBvZiBldmVyeSB3b3JkLAogICAgICAgIHRoYXQgdGhleSByZWNlaXZlLiBUaGUgZ29hbCBmb3IgdGhpcyBnYW1lLCBpcyBub3QgdG8gbWFrZSBhIGZsYXdsZXNzCiAgICAgICAgc2VudGVuY2UsIHdpdGhvdXQgYW55IGdyYW1tYXRpY2FsIG1pc3Rha2VzLiBJdCBpcyBzdXBwb3NlIHRvIG1ha2UgeW91CiAgICAgICAgcHJhY3RpY2UgeW91ciB2ZXJiYWwgc2tpbGxzLCB0byBnYWluIGV4cGVyaWVuY2UgaW4gZXhwbGFpbmluZyBzcGVjaWZpYwogICAgICAgIHRoaW5ncy4gSXQgaXMgZXF1YWwgdG8gd2hhdCBpcyBleHBlY3RlZCBvZiB5b3UgaW4gdGhlIGRlbWFuZHMgZnJvbSB0aGUKICAgICAgICBtaW5pc3RyeSBpbiBEZW5tYXJrLiBGcm9tIG91ciBjb2xsZWN0aW9uIG9mIGVtcGlyaWNhbCBkYXRhLCB3ZSBoYXZlCiAgICAgICAgbGVhcm5lZCB0aGF0IHRoZXkgdXNlIHRoZWlyIG5hdGl2ZSBsYW5ndWFnZSBtb3JlIGZyZXF1ZW50bHksIHdoZW4KICAgICAgICBkaXNjdXNzaW5nIHRoZSBtZWFuaW5nIG9mIHdvcmRzLgogICAgICA8L3A+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9Im1lZGlhQm94Ij4KICAgICAgPGg1PjwvaDU+CiAgICAgIDxwPgogICAgICAgIEl0IGlzIGhhcmQgdG8gY29udHJvbCwgd2hldGhlciB0aGUgcHVwaWxzIHNwZWFrIERhbmlzaCBvciBFbmdsaXNoLAogICAgICAgIHdoZW4gdGhlIHRlYWNoZXIgaXMgbm90IG5lYXJieS4gSXQgZ2F2ZSB0aGVtIGFuIGFkdmFudGFnZSBvZiBhIGNvbW1vbgogICAgICAgIHVuZGVyc3RhbmRpbmcsIHdoZW4gdGhleSBkaXNjdXNzIHRoZSB3b3Jkcy4KICAgICAgPC9wPgogICAgPC9kaXY+CiAgPC9kaXY+CjwvZGl2Pgo="},null]}