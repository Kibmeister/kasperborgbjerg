{"remainingRequest":"/Users/kaspersmac/Desktop/kasper-borgbjerg/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kaspersmac/Desktop/kasper-borgbjerg/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kaspersmac/Desktop/kasper-borgbjerg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaspersmac/Desktop/kasper-borgbjerg/src/components/SmartBelt_W.vue?vue&type=template&id=a81fed68&scoped=true&","dependencies":[{"path":"/Users/kaspersmac/Desktop/kasper-borgbjerg/src/components/SmartBelt_W.vue","mtime":1598804129098},{"path":"/Users/kaspersmac/Desktop/kasper-borgbjerg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaspersmac/Desktop/kasper-borgbjerg/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kaspersmac/Desktop/kasper-borgbjerg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaspersmac/Desktop/kasper-borgbjerg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}