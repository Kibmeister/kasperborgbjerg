{"remainingRequest":"/Users/kaspersmac/Desktop/kasperborgbjerg/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kaspersmac/Desktop/kasperborgbjerg/src/components/Cleaver_W.vue?vue&type=template&id=26dd4416&scoped=true&name=expMini&","dependencies":[{"path":"/Users/kaspersmac/Desktop/kasperborgbjerg/src/components/Cleaver_W.vue","mtime":1612543584504},{"path":"/Users/kaspersmac/Desktop/kasperborgbjerg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaspersmac/Desktop/kasperborgbjerg/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/kaspersmac/Desktop/kasperborgbjerg/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kaspersmac/Desktop/kasperborgbjerg/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cjx0cmFuc2l0aW9uPgogIDxkaXYKICAgIHJlZj0iZHJhZ2dhYmxlQ29udGFpbmVyIgogICAgaWQ9InJlc2l6YWJsZSIKICAgIGNsYXNzPSJkcmFnZ2FibGVDb250YWluZXIiCiAgICA6Y2xhc3M9ImV4cGFuZCIKICAgIHYtYmluZDpzdHlsZT0iewogICAgICB6SW5kZXg6IHpJbmRleCwKICAgICAgJ2JhY2tncm91bmQtY29sb3InOiBjb250ZW50Q29sb3IKICAgIH0iCiAgICBAbW91c2Vkb3duPSJ6SW5kZXhUb2dnbGUiCiAgPgogICAgPGRpdiBjbGFzcz0iZHJhZ2dhYmxlSGVhZGVyIiBAbW91c2Vkb3duPSJkcmFnTW91c2VEb3duIj4KICAgICAgPGRpdiBjbGFzcz0iZHJhZ2dhYmxlLWhlYWRlci10ZXh0Ij57eyBjb250ZW50LmhlYWRlciB9fTwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJ0aXRsZS1iYXItY29udHJvbHMiIEBtb3VzZWRvd24uc3RvcD4KICAgICAgICA8QnV0dG9uIGFyaWEtbGFiZWw9Ik1pbmltaXplIiBAY2xpY2s9IndpbmRvd1N0YXRlKCdtaW5pbWl6ZScpIj48L0J1dHRvbj4KICAgICAgICA8QnV0dG9uIGFyaWEtbGFiZWw9Ik1heGltaXplIiBAY2xpY2s9IndpbmRvd1N0YXRlKCdtYXhpbWl6ZScpIj48L0J1dHRvbj4KICAgICAgICA8QnV0dG9uIGFyaWEtbGFiZWw9IkNsb3NlIiBAY2xpY2s9ImhpZGVDb250YWluZXIiPjwvQnV0dG9uPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iaGVhZGVyIj4KICAgICAgPGgzPnt7IGNvbnRlbnQudGl0bGUgfX08L2gzPgogICAgICA8Zm9ybQogICAgICAgIGFjdGlvbj0iaHR0cHM6Ly94ZC5hZG9iZS5jb20vc3BlYy9kMWU2ZWM0ZC0xZWYyLTRjYjgtN2NlNy1mODE3MmJjOTQ0ODktYTdkNy8iCiAgICAgICAgdGFyZ2V0PSJfYmxhbmsiCiAgICAgID4KICAgICAgICA8QnV0dG9uIGlkPSJpZF9kZW1vIj5EZW1vPC9CdXR0b24+CiAgICAgIDwvZm9ybT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY29udGVudCI+CiAgICAgIDxkaXYgY2xhc3M9Im1lZGlhQm94Ij4KICAgICAgICA8aDU+QXBwbGljYXRpb24gZ29hbDwvaDU+CiAgICAgICAgPHA+CiAgICAgICAgICBUaGUgYXBwbGljYXRpb24gd2lsbCBlbmFibGUgdGhlIHVzZXIgdG8gY29ubmVjdCB3aXRoIG90aGVyIHVzZXJzIHRvIGVuZ2FnZWluIHZhcmlvdXMKICAgICAgICAgIHNvY2lhbCBhY3Rpdml0aWVzIHRvZ2V0aGVyLiBUaGUgZ29hbCBvZiB0aGUgYXBwbGljYXRpb24gaXMgdG8gaGVscCB0aGUgdXNlcnMgY29ubmVjdAogICAgICAgICAgd2l0aCBsaWtlbWluZGVkIHVzZXJzIGluIGFjdGl2aXRpZXMgb2YgdGhlaXIgY2hvb3NpbmcsIHdoZXRoZXIgaXQgd291bGQgYmUgZ29pbmcgdG8gYQogICAgICAgICAgYmFyLCBhdHRlbmQgYSBzcG9ydHMgZ2FtZSwgb3Igd2F0Y2ggYSBtb3ZpZS4gQSBjZW50cmFsIGZlYXR1cmUgaXMgdGhlIGFiaWxpdHkgdG8gY29ubmVjdAogICAgICAgICAgdXNlcnMgdGhhdCBkb27igJl0IGtub3cgZWFjaCBvdGhlciBwcmlvciB0byB0aGUgc29jaWFsIGFjdGl2aXR5LCBtYXRjaGluZyB0aGVtIGJhc2VkIG9uCiAgICAgICAgICBsb2NhdGlvbiBhbmQgYSBjb21tb24gaW50ZXJlc3QuCiAgICAgICAgPC9wPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0ibWVkaWFCb3giPgogICAgICAgIDxoNT48L2g1PgogICAgICAgIDxwPgogICAgICAgICAgV2UgcHJvcG9zZSB0aGF0IHVzZXJzIGNhbiDigJlob3N04oCZIGV2ZW50cywgYW5kIHRoZW4gb3RoZXIgdXNlcnMgaW4gdGhlIGltbWVkaWF0ZSBhcmVhIGNhbgogICAgICAgICAg4oCZc2lnbiB1cOKAmSBmb3IgZXZlbnRzIGlmIHRoZXkgZmVlbCBsaWtlIG1lZXRpbmcgbmV3IHBlb3BsZSwgYW5kIHRoZSBwcm9wb3NlZCBldmVudAogICAgICAgICAgaW50ZXJlc3RzIHRoZW0uIEFmdGVyIGF0dGVuZGlnIGFuIGV2ZW50IG9yIGhvc3RpbmcgaXQsIHRoZSBwYXJ0aWNpcGFudHMgb2YgdGhlIGV2ZW50CiAgICAgICAgICB3aWxsIGJlIGRpc3BsYXllZCBhcyBhY3F1YWludGFuY2UgaW4gdGhlIENvbm5lY3Rpb25zIHJvb20sIHdoZXJlIGVhY2ggYWNxdWFpbnRhbmNlIGlzCiAgICAgICAgICBwcmVzZW50ZWQgYXMgdG8gd2hpY2ggY29tbW9uIGV2ZW50IHlvdSBsYXN0IGF0dGVuZGVkLgogICAgICAgIDwvcD4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9Im1lZGlhQm94Ij4KICAgICAgICA8aDU+VGFyZ2V0IHVzZXI8L2g1PgogICAgICAgIDxwPgogICAgICAgICAgVGhlIHRhcmdldCB1c2VyIGFyZSB5b3VuZ2VyIHBlb3BsZSB0aGF0IGFyZSBuZXcgaW4gYSBjaXR5LCBlaXRoZXIgdGhleSBhcmUgdGhlcmUgdG9zdGF5CiAgICAgICAgICBvciBqdXN0IG9uIHZhY2F0aW9uIC0gYW5kIHdhbnQgdG8gbWVldCB1cCB3aXRoIG90aGVyIHBlb3BsZS4gTW9yZW92ZXIsIHRoZSB0YXJnZXQgZ3JvdXAKICAgICAgICAgIGRvZXMgbm90ZXhjbHVkZSB5b3VuZ2VyIHBlb3BsZSBtb3ZpbmcgZnJvbSBvdGhlciBjb3VudHJpZXMuIFlvdW5nIHBlb3BsZSwgYXJlIG1vcmUKICAgICAgICAgIGxpa2VseSB0byB0cmF2ZWwgYWxvbmUgdG8gYW5ldyBjaXR5LCBhcyB0aGV5IGFyZSBtb3JlIGFkdmVudHVyb3VzIGFuZCBvZnRlbiBkb27igJl0IGhhdmUKICAgICAgICAgIGNvbW1pdG1lbnRzIGJhY2sgaG9tZSwgc3VjaCBhcyBmYW1pbHkgYW5kIGNhcmVlciBjb21wYXJlZCB0byBtaWRkbGVhZ2UgcGVvcGxlLgogICAgICAgIDwvcD4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9Im1lZGlhQm94Ij4KICAgICAgICA8aDU+TW9iaWxlIGZlYXR1cmVzPC9oNT4KICAgICAgICA8cD4KICAgICAgICAgIFdlIGVudmlzaW9uZWQgdGhhdCBhbGwgbmVhcmJ5IGF2YWlsYWJsZSBldmVudHMgc2hvdWxkIGFwcGVhciBvbiB0aGUgbWFwLCByZWxhdGl2ZSB0byB0aGUKICAgICAgICAgIHVzZXJzIHBvc2l0aW9uLiBIZW5jZSwgbG9jYXRpb24gc2VydmljZSBwcm92aWVkZWQgYnkgdGhlIEFuZHJvaWQgTWFwIEFQSSBpcyBjZW50cmFsLgogICAgICAgICAgRnVydGhlcm1vcmUsIHRoZSBwb3NzaWJpbGl0eSB0byBmb2xsb3cgdXAgb24gZXZlbnQgYW5kIHBlb3BsZSB3aXRoIGNvbW1vbiBpbnRlcmVzdCwgdGhlCiAgICAgICAgICBhYmlsaXR5IHRvIGNoYXQgYW5kIHJlY2lldmUgbm90aWZpY2F0aW9ucyBpcyB2aXRhbC4KICAgICAgICA8L3A+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBjbGFzcz0ibWVkaWFCb3giIGxhbmc9ImltZyI+CiAgICAgICAgPGg1PlBlcnNvbmFsIHByb2ZpbGUgcGFnZSAoRnJhbWUuMSk8L2g1PgogICAgICAgIDxpbWcgc3JjPSJodHRwczovL2kuaW1ndXIuY29tL09FWTN3dnAucG5nIiAvPgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgY2xhc3M9Im1lZGlhQm94IiBsYW5nPSJpbWciPgogICAgICAgIDxoNT5DaGF0IHdpbmRvdyAoRnJhbWUuMik8L2g1PgogICAgICAgIDxpbWcgc3JjPSJodHRwczovL2kuaW1ndXIuY29tL2xybDQybGUucG5nIiAvPgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgY2xhc3M9Im1lZGlhQm94IiBsYW5nPSJpbWciPgogICAgICAgIDxoNT5DcmVhdGluZyBldmVudCAoRnJhbWUuMyk8L2g1PgogICAgICAgIDxpbWcgc3JjPSJodHRwczovL2kuaW1ndXIuY29tL1FKeDlEYVUucG5nIiAvPgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgY2xhc3M9Im1lZGlhQm94IiBsYW5nPSJpbWciPgogICAgICAgIDxoNT5FdmVudCBhcHBlYXJzIG9uIG1hcCAoRnJhbWUuNCk8L2g1PgogICAgICAgIDxpbWcgc3JjPSJodHRwczovL2kuaW1ndXIuY29tL09kUGdzczQucG5nIiAvPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0ibWVkaWFCb3giPgogICAgICAgIDxoNT5QYXBlciBtb2NrLXVwczwvaDU+CiAgICAgICAgPHA+CiAgICAgICAgICBPdXIgZmlyc3QgcGFpciBvZiBwYXBlciBtb2NrLXVwICgnUGVyc29uYWwgcHJvZmlsZSBwYWdlICYgQ2hhdCBXaW5kb3cnKSwgaXMgZ29pbmcKICAgICAgICAgIHRocm91Z2ggdGhlIGludGVyYWN0aW9uIHdoZXJlIGEgZGFuaXNoIGdpcmwgZm9yIEFhcmh1cywgQW5uYSwgY29tZXMgYmFjayB0byBoZXIKICAgICAgICAgIGhvbWV0b3duLCBhbmQgZ2V0cyBpbiBjb250YWN0IHdpdGggYSBmb3JtZXIgZnJpZW5kLCBNaWtlLiBJbiB0aGUgZmlyc3QgZnJhbWUgW0ZyYW1lIDFdLCBBbm5hIGhhcwogICAgICAgICAgYW4gb3ZlcnZpZXcgb2YgaGVyIHByb2ZpbGUsIGFzIHdlbGwgYXMgdGhlIGxhc3QgcGVvcGxlIHNoZSBoYXMgYmVlbiBpbiBjb250YWN0IHdpdGguIFNoZQogICAgICAgICAgcHJlc3NlcyBvbiBNaWtlIGFzIGhlIGlzIHRoZSBvbmx5IG9uZSBhbHNvIGxvY2F0ZWQgaW4gQWFyaHVzLiBUaGUgc2Vjb25kIGZyYW1lIFtGcmFtZSAyXSwgc2hvdyBhCiAgICAgICAgICBzbWFsbCBwcm9maWxlIHNlY3Rpb24gaW4gdGhlIHRvcCBjb3ZlcmluZyBnZW5lcmFsIGluZm8gYWJvdXQgbWlrZS4gQmVsb3cgdGhhdCB3ZSBjYW4gc2VlCiAgICAgICAgICB0aGUgcmVjZW50IG1lc3NhZ2VzIHRoZXkgaGF2ZSBleGNoYW5nZWQuIEZ1cnRoZXJtb3JlLCBpdCBkZXBpY3RzIEFubmEgaGF2aW5nIHNlbnQgYQogICAgICAgICAgbWVzc2FnZSBhc2tpbmcgTWlrZSBvdXQgZm9yIGNvZmZlZSB0aGUgbmV4dCBkYXksIGFuZCBNaWtlIGhhdmUganVzdCBiZWNvbWUgYWN0aXZlLAogICAgICAgICAgY3VycmVudGx5IHR5cGluZyBhIHJlc3BvbnNlIHRvIEFubmEuCiAgICAgICAgICA8YnIgLz4gPGJyIC8+CiAgICAgICAgICBJbiBvdXIgc2Vjb25kIG1vY2stdXAgW0ZyYW1lIDNdLCBhIG1hbiBuYW1lZCBDaHJpcyBoYXZlIGp1c3QgbW92ZWQgdG8gQ29wZW5oYWdlbiBmcm9tCiAgICAgICAgICBTdG9ja2hvbG0sIGFuZCBoYXZlIGp1c3Qgc2V0IGhpcyBwcm9maWxlIHVwIHdpdGggdGhlIGFwcC4gQmVpbmcgbmV3IGluIHRvd24gaGUgd2FudCB0bwogICAgICAgICAgc29jaWFsaXplIGFuZCBpbnZpdGUgc29tZSBwZW9wbGUgb3V0IG9uIGRpbm5lci4gSGVuY2UsIGhlIGNyZWF0ZXMgYW4gZXZlbnQgdGhhdCB3aWxsIGJlCiAgICAgICAgICBkaXNwbGF5ZWQgb24gdGhlIG1hcCBpbiB0aGUgSGFwcGVuaW5ncyBzZWN0aW9uIG9mIHRoZSBhcHAsIHRoYXQgcGVvcGxlIGluIHRoZSBuZWFyYnkKICAgICAgICAgIGxvY2F0aW9uIGNhbiBzZWUgYW5kIGpvaW4uIEhlIGhhcyBzb21lIG9wdGlvbnMgdG8gc3BlY2lmeSB0aGUgZXZlbnQsIFdoYXQgaXMgdGhlIGV2ZW50LAogICAgICAgICAgRm9yIHdob20sIEF0IHdoYXQgdGltZSBhbmQgdGhlIGZvbGxvd2luZyBsb2NhdGlvbiBvZiB0aGUgZXZlbnQuIENvbXBsZXRpbmcgdGhlIHBvc3QgaGUKICAgICAgICAgIHByZXNzIHRoZSAiUG9zdCIgYnV0dG9uLiBGb2xsb3dpbmcgdGhhdCBhY3Rpb24sIHRoZSBhcHAgZ2l2ZXMgaGltIGFuIGFsZXJ0IGRpYWxvZ3VlLAogICAgICAgICAgaW5mb3JtaW5nIGhpbSB0aGF0IGhpcyBwb3N0IHdhcyBzdWNjZXNzZnVsbHkgdXBsb2FkZWQgKFRoaXMgRnJhbWUgaXMgbm90IGluY2x1ZGVkKS4gSGUKICAgICAgICAgIHByZXNzZXMgdGhlICJPayIgYnV0dG9uIG9uIHRoZSBhbGVydCBkaWFsb2d1ZSBhbmQgaXMgdGhlIHJlZGlyZWN0ZWQgdG8gIkhhcHBlbmluZ3MiCiAgICAgICAgICBzZWN0aW9uIG9mIG91ciBhcHAgW0ZyYW1lIDRdLCB3aGVyZSB0aGUgbWFwIHNob3dzIGhpbSB0aGF0IGxvY2F0aW9uIG9mIHRoZSBldmVudCBhcyB3ZWxsIGFzIGEKICAgICAgICAgIGRlc2NyaXB0aW9uIG9mIHRoZSBldmVudC4KICAgICAgICA8L3A+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBjbGFzcz0ibWVkaWFCb3giIGxhbmc9ImltZyI+CiAgICAgICAgPGg1PlBlcnNvbmFsIHByb2ZpbGUgcGFnZTwvaDU+CiAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vaS5pbWd1ci5jb20vZjNGRDI2Si5wbmc/NCIgLz4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9Im1lZGlhQm94IiBsYW5nPSJpbWciPgogICAgICAgIDxoNT5DaGF0IHdpbmRvdzwvaDU+CiAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vaS5pbWd1ci5jb20vT2t6QWh2eS5wbmc/MiIgLz4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9Im1lZGlhQm94IiBsYW5nPSJpbWciPgogICAgICAgIDxoNT5DcmVhdGluZyBldmVudDwvaDU+CiAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vaS5pbWd1ci5jb20vRHF0V2c1eS5wbmciIC8+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJtZWRpYUJveCIgbGFuZz0iaW1nIj4KICAgICAgICA8aDU+RXZlbnQgYXBwZWFycyBvbiBtYXA8L2g1PgogICAgICAgIDxpbWcgc3JjPSJodHRwczovL2kuaW1ndXIuY29tL2JpeFpkZ3QucG5nIiAvPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0ibWVkaWFCb3giPgogICAgICAgIDxoNT5GcmFnbWVudHMgSGlGaSBwcm90b3R5cGU8L2g1PgogICAgICAgIDxwPgogICAgICAgICAgVGhlIGRlc2lnbiBmcm9tIHRoZSBwYXBlciBtb2NrLXVwcyB3aGVyZSByZXZpc2VkIGFuZCBwdXQgdGhyb3VnaHQgZGlmZmVyZW50IHR5cGVzIG9mCiAgICAgICAgICBhbmFseXNpcyBzdWNoIGFzIEhldXJpc3RpYyBFdmFsdWF0aW9uIGFuZCBFeHBlcnQgUmV2aWV3IEFuYWx5c2lzLiBUaGVzZSBtZXRob2RzCiAgICAgICAgICBldmVudHVhbGx5IGNyYWZ0ZWQgdGhlIEhpRmkgcHJvdG90eXBlLCBBZG9iZVhEIHRoYXQgaXMgYSBzaW1wbGUgYnV0IGRldGFpbGVkCiAgICAgICAgICB2aXN1YWxpc2F0aW9uIG9mIHdoYXQgZGVzaWduIHdlIHN0cml2ZWQgdG8gYWNjb21wbGlzaCB3aXRoIHRoZSBDbGVhdmVyIGFwcGxpY2F0aW9uLiBGb3IKICAgICAgICAgIGZ1cnRoZXIgaW50ZXJlc3QsIGNsaWNrIHRoZSBsaW5rIGluIHRoZSBoZWFkZXIgYWJvdmUgdG8gY2hlY2sgb3V0IHRoZSBwcm90b3R5cGUuCiAgICAgICAgICBGWUk6IHRoZSBuYW1lIENsZWF2ZXIgaGFzIGl0cyBvcmlnaW5zIGZyb20gYSB0eXBvLCB3ZXJlIHRoZSBhY3R1YWwgbmFtZSBzaG91bGQgaGF2ZSBiZWVuIENsZXZlci4KICAgICAgICA8L3A+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+CjwvdHJhbnNpdGlvbj4K"},null]}